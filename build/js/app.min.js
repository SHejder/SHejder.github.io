(function () {
    'use strict';

    let getData = {
        name: function () {
            let arr = ['Иван', 'Степан', 'Сергей', 'Ирина', 'Виктория', 'Светлана'];
            return arr[getData.randomInt(arr.length - 1)]

        },

        email: function () {
            let arr = ['test@darvin-studio.ru', 'darvin@yandex.ru', 'darvin@gmail.com', 'darvin@bk.ru'];

            return arr[getData.randomInt(arr.length - 1)]
        },

        randomInt: function (max) {
            let min = 0;
            max = Math.floor(max);
            return Math.floor(Math.random() * (max - min + 1)) + min;
        },

        phone: function () {
            let arr = [89009009090, '+78954566235', 89201002020];

            return arr[getData.randomInt(arr.length - 1)]
        },
        textarea: function () {
            let arr = ['This is the test!', 'Hi! It\'s a test!'];

            return arr[getData.randomInt(arr.length - 1)]
        },
        text: function () {
            let arr = ['This is the test!', 'Hi! It\'s a test!'];

            return arr[getData.randomInt(arr.length - 1)]
        },
        number:function () {
            return getData.randomInt(100)
        }
    };

    let check = {
        name: function ($input) {
            let name = $input.attr('name').toLowerCase();
            if (name !== undefined) {
                if (~name.indexOf('phone')) {
                    return 'isPhone'
                } else if (~name.indexOf('name')) {
                    return 'isName'
                } else if (~name.indexOf('email')) {
                    return 'isEmail'
                } else {
                    return false
                }
            } else {
                return false
            }

        },

        action: function ($form) {
            if ($form.attr('action') !== undefined){
                let action = $form.attr('action');
                if (~action.indexOf('search')) {
                    return 'isSearch'
                } else {
                    return false
                }
            }
        },

        type: function ($input) {
            let type = $input.attr('type');
            if  (type === 'email') {
                return 'isEmail'
            } else if (type === 'text') {
                return 'isText'
            } else if (type === 'number') {
                return type
            } else if (type === 'phone') {
                return 'isPhone'
            } else if (type === 'submit') {
                return type
            } else {
                return false
            }
        }

    };

    /**
     *
     * @return {string}
     */
    function Type($input) {
        let name = check.name($input);
        let type = check.type($input);
        if (type === 'isEmail') {
            return 'email'
        } else if (type === 'isText') {
            if (name === 'isName') {
                return 'name'
            } else if (name === 'isPhone') {
                return 'phone'
            }else if (name === 'isEmail') {
                return 'email'
            } else {
                return 'text'
            }
        } else if (type === 'submit') {
            return type
        } else if (type === 'number') {
            return type
        } else {
            return ''
        }
    }

    let fill = {
        field: function ($field, type) {
            if (type === 'email') {
                $field.val(getData.email);
            } else if (type === 'text') {
                $field.val(getData.text);
            } else if (type === 'phone') {
                $field.val(getData.phone);
            } else if (type === 'name') {
                $field.val(getData.name);
            } else if (type === 'textarea') {
                $field.val(getData.textarea);
            } else if (type === 'number') {
                $field.val(getData.number);
            } else {
                return false
            }

        },

        required: function ($this) {
            $this.find('textarea').each(function () {
                let $textarea = $(this);
                if ($textarea.attr('required') !== undefined) {
                    fill.field($textarea, 'textarea');
                    $textarea.change();
                    $textarea.blur();

                }
            });

            $this.find('input').each(function () {

                let $input = $(this);
                let type = Type($input);


                if (type !== 'submit' && $input.is(':visible')) {
                    $input.val('');
                }


                if ($input.attr('required') !== undefined && $input.is(':visible')) {
                    fill.field($input, type);
                    $input.change();
                    $input.blur();
                }
            });

        },

        all: function ($this) {

            $this.find('textarea').each(function () {
                let $textarea = $(this);
                fill.field($textarea, 'textarea');
                $textarea.change();
                $textarea.blur();

            });
            $this.find('input').each(function () {

                let $input = $(this);
                let type = Type($input);


                if (type !== 'submit' && $input.is(':visible')) {
                    $input.val('');
                }


                if ($input.is(':visible')) {
                    fill.field($input, type);
                    $input.change();
                    $input.blur();

                }
            });


        }
    };

    (function ($) {

        // let screenWidth = $(window).width();
        let defaults = {
            // дефолтные опции

            appPath: 'https://shejder.github.io/build/js',

            template: function () {
                return `
                <div class="test-wrap" >
                    <div class="top-wrapper">
                        <select class="fixture-type">
                            <option value="">Как заполнить поля?</option>   
                            <option value="required">Только обязательные</option>  
                            <option value="all">Все доступные</option>  
                        </select>
                        <div class="switcher close"><img src="`+defaults.appPath+`/img/arrow-down-left.svg" alt="open" title="Click to open"></div>                      
                    </div>
                    <button class="fill" type="button">Заполнить</button> 
                    <button class="clean" type="button">Сброс</button> 
                </div>`
            }
        };
        //


        $('form').each(function () {

            let $this = $(this);


            //проверяем наличие виджета на странице
            if ($this.find('.test-wrap')) {
                $this.find('.test-wrap').remove();
            }

            //добавляем виджет
            if (check.action($this) !== 'isSearch' && $this.find('input').length > 1) {
                $this.append(defaults.template);
            }
            $this.css({
                position: 'relative'
            });


            let $widget = $this.find('.test-wrap');
            let $switcher = $widget.find('.switcher');
            let val;

            $switcher.on('click',function () {
                if ($switcher.hasClass('close')){
                    $switcher.removeClass('close');

                    $widget.css({
                        width: 'auto',
                        height: 'auto',
                        // left: /*position*/'57%',
                    });
                    $switcher.css({
                        margin: 'auto 10px'
                    });
                    if($widget.find('.fixture-type').val() !== ''){
                        $widget.find('button').toggle();
                    }

                    $switcher.find('img').attr('src', defaults.appPath+'/img/arrow-up-right.svg');
                    $switcher.find('img').attr('title', 'Click to close');
                    $switcher.find('img').attr('alt', 'close');
                    $widget.find('select').toggle();


                    $switcher.addClass('open');
                } else if ($switcher.hasClass('open')) {
                    $switcher.removeClass('open');
                    if($widget.find('button').is(':visible') ){
                        $widget.find('button').toggle();
                    }

                    $widget.css({
                        width: '32px',
                        height: '32px',
                        // left: /*position*/'94%',

                    });
                    $switcher.css({
                        margin: 'auto'

                    });

                    $switcher.find('img').attr('src', defaults.appPath+'/img/arrow-down-left.svg');
                    $switcher.find('img').attr('title', 'Click to open');
                    $switcher.find('img').attr('alt', 'open');


                    $widget.find('select').toggle();

                    $switcher.addClass('close');

                }

            });

            $widget.find('.fixture-type').on('change', function () {

                let $select = $(this);
                val = $select.val();
                if ($widget.find('button').is(':hidden')){
                    $widget.find('button').toggle();
                }


            });
            //кнопки
            $widget.find('clean').on('click', function () {
               let $button = $(this);
               $this.find('input').each(function () {


                   let $input = $(this);
                   if (type !== 'submit' && $input.is(':visible')) {
                       $input.val('');
                   }

                   $button.text('Заполнить');

               });
            });

            $widget.find('fill').on('click', function () {
                let $button = $(this);
                $button.text('Перезаполнить');
                if (val === 'required') {

                    fill.required($this);

                } else if (val === 'all') {

                    fill.all($this);

                }
            });



            //положение виджета
            // let position;
            // if ($this.width() === screenWidth) {
            //      position = '85%';
            // } else {
            //     position = '110%';
            // }


            //стили виджета
            $widget.css({
                position: 'absolute',
                top: 0,
                right: '10px',
                //left: /*position*/'94%',
                backgroundColor: '#f5f5f5',
                opacity: 0.9,
                border: '2px solid black',
                borderRadius: '2px',
                zIndex: 999999,
                width: '32px',
                height: '32px'

            });

            $widget.find('select').css({
                margin: '10px',
                width: 'auto',
                padding: '4px',
                height: 'auto',
                display: 'none'

            });

            $widget.find('button').css({
                margin: '10px 20px',
                padding: '4px',
                display: 'none'
            });

            $widget.find('.switcher').css({
                padding: '4px',
                // width: '28px',
                // height: '28px',
                display: 'block',
                border: '1px solid black'
            });

            $widget.find('.top-wrapper').css({
                display: 'flex',
                verticalAlign: 'baseline',
                justifyContent: 'space-around',
            });


        });
    })(jQuery);

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
